<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  <head>
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/default.css">
    <link rel="stylesheet" href="../styles/main.css">
  </head>
  <body>
    <article>
  
  
  <h1 id="OutlawEngine_ImGuiController" data-uid="OutlawEngine.ImGuiController" class="text-break">Class ImGuiController
  </h1>
  <div class="markdown level0 summary"></div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><span class="xref">System.Object</span></div>
    <div class="level1"><span class="xref">ImGuiController</span></div>
  </div>
  <div class="implements">
    <h5>Implements</h5>
    <div><span class="xref">System.IDisposable</span></div>
  </div>
  <div class="inheritedMembers">
    <h5>Inherited Members</h5>
    <div>
      <span class="xref">System.Object.Equals(System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.Equals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.GetHashCode()</span>
    </div>
    <div>
      <span class="xref">System.Object.GetType()</span>
    </div>
    <div>
      <span class="xref">System.Object.MemberwiseClone()</span>
    </div>
    <div>
      <span class="xref">System.Object.ReferenceEquals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.ToString()</span>
    </div>
  </div>
  <h6><strong>Namespace</strong>: <a class="xref" href="OutlawEngine.html">OutlawEngine</a></h6>
  <h6><strong>Assembly</strong>: OutlawEngine.dll</h6>
  <h5 id="OutlawEngine_ImGuiController_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class ImGuiController : IDisposable</code></pre>
  </div>
  <h3 id="constructors">Constructors
  </h3>
  <a id="OutlawEngine_ImGuiController__ctor_" data-uid="OutlawEngine.ImGuiController.#ctor*"></a>
  <h4 id="OutlawEngine_ImGuiController__ctor_System_Int32_System_Int32_" data-uid="OutlawEngine.ImGuiController.#ctor(System.Int32,System.Int32)">ImGuiController(Int32, Int32)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/OutlawEngine.ImGuiController.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Constructs a new ImGuiController.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public ImGuiController(int width, int height)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">width</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">height</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="methods">Methods
  </h3>
  <a id="OutlawEngine_ImGuiController_CheckGLError_" data-uid="OutlawEngine.ImGuiController.CheckGLError*"></a>
  <h4 id="OutlawEngine_ImGuiController_CheckGLError_System_String_" data-uid="OutlawEngine.ImGuiController.CheckGLError(System.String)">CheckGLError(String)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void CheckGLError(string title)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">title</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="OutlawEngine_ImGuiController_CreateDeviceResources_" data-uid="OutlawEngine.ImGuiController.CreateDeviceResources*"></a>
  <h4 id="OutlawEngine_ImGuiController_CreateDeviceResources" data-uid="OutlawEngine.ImGuiController.CreateDeviceResources">CreateDeviceResources()</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void CreateDeviceResources()</code></pre>
  </div>
  <a id="OutlawEngine_ImGuiController_CreateProgram_" data-uid="OutlawEngine.ImGuiController.CreateProgram*"></a>
  <h4 id="OutlawEngine_ImGuiController_CreateProgram_System_String_System_String_System_String_" data-uid="OutlawEngine.ImGuiController.CreateProgram(System.String,System.String,System.String)">CreateProgram(String, String, String)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static int CreateProgram(string name, string vertexSource, string fragmentSoruce)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">name</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">vertexSource</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">fragmentSoruce</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="OutlawEngine_ImGuiController_DestroyDeviceObjects_" data-uid="OutlawEngine.ImGuiController.DestroyDeviceObjects*"></a>
  <h4 id="OutlawEngine_ImGuiController_DestroyDeviceObjects" data-uid="OutlawEngine.ImGuiController.DestroyDeviceObjects">DestroyDeviceObjects()</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void DestroyDeviceObjects()</code></pre>
  </div>
  <a id="OutlawEngine_ImGuiController_Dispose_" data-uid="OutlawEngine.ImGuiController.Dispose*"></a>
  <h4 id="OutlawEngine_ImGuiController_Dispose" data-uid="OutlawEngine.ImGuiController.Dispose">Dispose()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/OutlawEngine.ImGuiController.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Frees all graphics resources used by the renderer.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Dispose()</code></pre>
  </div>
  <a id="OutlawEngine_ImGuiController_LabelObject_" data-uid="OutlawEngine.ImGuiController.LabelObject*"></a>
  <h4 id="OutlawEngine_ImGuiController_LabelObject_OpenTK_Graphics_OpenGL4_ObjectLabelIdentifier_System_Int32_System_String_" data-uid="OutlawEngine.ImGuiController.LabelObject(OpenTK.Graphics.OpenGL4.ObjectLabelIdentifier,System.Int32,System.String)">LabelObject(ObjectLabelIdentifier, Int32, String)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void LabelObject(ObjectLabelIdentifier objLabelIdent, int glObject, string name)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">OpenTK.Graphics.OpenGL4.ObjectLabelIdentifier</span></td>
        <td><span class="parametername">objLabelIdent</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">glObject</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">name</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="OutlawEngine_ImGuiController_PressChar_" data-uid="OutlawEngine.ImGuiController.PressChar*"></a>
  <h4 id="OutlawEngine_ImGuiController_PressChar_System_Char_" data-uid="OutlawEngine.ImGuiController.PressChar(System.Char)">PressChar(Char)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void PressChar(char keyChar)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Char</span></td>
        <td><span class="parametername">keyChar</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="OutlawEngine_ImGuiController_RecreateFontDeviceTexture_" data-uid="OutlawEngine.ImGuiController.RecreateFontDeviceTexture*"></a>
  <h4 id="OutlawEngine_ImGuiController_RecreateFontDeviceTexture" data-uid="OutlawEngine.ImGuiController.RecreateFontDeviceTexture">RecreateFontDeviceTexture()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/OutlawEngine.ImGuiController.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Recreates the device texture used to render text.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void RecreateFontDeviceTexture()</code></pre>
  </div>
  <a id="OutlawEngine_ImGuiController_Render_" data-uid="OutlawEngine.ImGuiController.Render*"></a>
  <h4 id="OutlawEngine_ImGuiController_Render" data-uid="OutlawEngine.ImGuiController.Render">Render()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/OutlawEngine.ImGuiController.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Renders the ImGui draw list data.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Render()</code></pre>
  </div>
  <a id="OutlawEngine_ImGuiController_Update_" data-uid="OutlawEngine.ImGuiController.Update*"></a>
  <h4 id="OutlawEngine_ImGuiController_Update_OpenTK_Windowing_Desktop_GameWindow_System_Single_" data-uid="OutlawEngine.ImGuiController.Update(OpenTK.Windowing.Desktop.GameWindow,System.Single)">Update(GameWindow, Single)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/OutlawEngine.ImGuiController.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Updates ImGui input and IO configuration state.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Update(GameWindow wnd, float deltaSeconds)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">OpenTK.Windowing.Desktop.GameWindow</span></td>
        <td><span class="parametername">wnd</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Single</span></td>
        <td><span class="parametername">deltaSeconds</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <a id="OutlawEngine_ImGuiController_WindowResized_" data-uid="OutlawEngine.ImGuiController.WindowResized*"></a>
  <h4 id="OutlawEngine_ImGuiController_WindowResized_System_Int32_System_Int32_" data-uid="OutlawEngine.ImGuiController.WindowResized(System.Int32,System.Int32)">WindowResized(Int32, Int32)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void WindowResized(int width, int height)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">width</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">height</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="implements">Implements</h3>
  <div>
      <span class="xref">System.IDisposable</span>
  </div>
</article>
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
